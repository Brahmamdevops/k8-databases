
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: roboshop
  labels:
    app: web
    project: roboshop
    tier: web
spec:
  replicas: {{ .Values.deployment.replicas }}
  selector:
    matchLabels:
      app: web
      project: roboshop
      tier: web
  template:
    metadata:
      labels:
        app: web
        project: roboshop
        tier: web
    spec:
      containers:
      - name: web
        image: "brahmamdevops/web:{{ .Values.deployment.imageVersion }}"
        imagePullPolicy: Always
        args:
        - "--ignore-db-dir=lost+found"
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "256Mi"
            cpu: "100m"
        volumeMounts:
        - name: nginx-conf
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
          readOnly: true

      volumes:
      - name: nginx-conf
        configMap:
          name: web
          items:
            - key: nginx.conf
              path: nginx.conf


---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web
  namespace: roboshop
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/tags: Environment=dev,Team=test,Project=Roboshop
    alb.ingress.kubernetes.io/group.name: roboshop
spec:
  ingressClassName: alb
  rules:
  - host: "roboshop.mvaws.online"
    http:
      paths:
      - pathType: Prefix
        path: "/"
        backend:
          service:
            name: web
            port:
              number: 80